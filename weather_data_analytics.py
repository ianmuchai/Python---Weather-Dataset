# -*- coding: utf-8 -*-
"""Weather Data Analytics

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1Nt78G_1fT9QlgeTzCGljdbGKYx8cHp_t
"""

import pandas as pd

df = pd.read_csv("/content/1. Weather Data.csv")

df

# Data exploration of the data set.
df.head()

# To check total number of columns and rows in data set.
df.shape

# To check range of the dataset
df.index

# To analyze column names
df.columns

# To check data types of columns
df.dtypes

# To check unique values that are contained in a single column
df['Weather'].unique()

# Checking unique values in all the columns in the data set
df.nunique()

# Checking non-null values in the dataset
df.count()

# Checking unique values in the data set and their counts
df['Weather'].value_counts()

# Checking basic information on the data set
df.info()

# Finding Unique "wind speed" values in the data
df.nunique()
# shows 34.

df['Wind Speed_km/h'].nunique()

df['Wind Speed_km/h'].unique()

# Number of times when wheather is clear.
df.head(1)

df.Weather.value_counts()

df[df.Weather == 'Clear']  #Filtering

df.groupby('Weather').get_group('Clear') # Group by

# Number of times when wind speed was exactly 4 km/h
df[df['Wind Speed_km/h'] == 4]

# Checking sum of null values in the data
df.isnull().sum()

# Renaming Weather column to Weathers
df.rename(columns = {'Weather' : 'Weathers'}, inplace = True) # To rename the column permanently you have to use , and "inplace" clause.
df.head(2)

# Finding the mean visibility
df.Visibility_km.mean()

# Finding the standard deviation of pressure
df.Press_kPa.std()

# Finding variance of relative humidity in the data
df['Rel Hum_%'].var()

# Finding the frequency of when Snow was recorded
df[df.Weathers == 'Snow']

df[df['Weathers'].str.contains('Snow')]

# All instances when Wind Speed is above 24 and visibility is 25.
df[(df['Wind Speed_km/h'] > 24) & (df['Visibility_km'] == 25)]

# Mean value of each column against each weathers
df.groupby('Weathers').mean()

# Minimum and maximum value of each column against each weather condition
df.groupby('Weathers').min()

df.groupby('Weathers').max()

# Selecting all conditions where the weather condition is fog.
df[df['Weathers'] == 'Fog']

# All instances where weather is clear or visibility is above 40
df[(df['Weathers'] == 'Clear') | (df['Visibility_km'] > 40)]

# All instances where weather is clear and relative humidity is greater than 50 or where visibility is above 40
df[(df['Weathers'] == 'Clear') & (df['Rel Hum_%'] > 50) | (df['Visibility_km'] > 40)]